/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package forms;

import bean.Events;
import bean.PropertyEnlist;
import java.sql.Connection;
import dao.IQueryMapper;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import util.DbUtil;

/**
 *
 * @author aakashsangani
 */
public class RemovePersonalEvent extends javax.swing.JPanel {

    /**
     * Creates new form DeleteProperty
     */
    String fName;
    
    public RemovePersonalEvent(String fName) {
        initComponents();
        this.fName = fName;
        populateReviewTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        reviewTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jPanel3.setBackground(new java.awt.Color(17, 69, 66));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3), "DELETE EVENT", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setText("  DELETE EVENT");
        jLabel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEtchedBorder()));

        reviewTable.setBackground(new java.awt.Color(17, 69, 66));
        reviewTable.setForeground(new java.awt.Color(242, 242, 242));
        reviewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "EventName", "Date", "City", "State"
            }
        ));
        jScrollPane1.setViewportView(reviewTable);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(242, 242, 242));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/forms/icons/delete (1).png"))); // NOI18N
        jLabel2.setText("DELETE EVENT");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(169, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3);

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        deleteEvent(evt.paramString());
    }//GEN-LAST:event_jLabel2MouseClicked

    private void deleteEvent(String buttonName) {
        int selectedRow = reviewTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select an Event to delete!");
            return;
        }

        DefaultTableModel reviewTableModel = (DefaultTableModel) reviewTable.getModel();
        Events event = (Events) reviewTableModel.getValueAt(selectedRow, 0);

        try ( Connection conn = DbUtil.getConnection();  
                PreparedStatement ps = conn.prepareStatement(IQueryMapper.DELETE_PERSONAL_EVENT)) {

            ps.setString(1, event.getEventId());
            ps.executeUpdate();

            JOptionPane.showMessageDialog(this, "Event Deleted Successfully");
            populateReviewTable();

        } catch (Exception ex) {
            Logger.getLogger(RemovePersonalEvent.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable reviewTable;
    // End of variables declaration//GEN-END:variables

    private void populateReviewTable() {
        DefaultTableModel populateReviewTable = (DefaultTableModel) reviewTable.getModel();
        populateReviewTable.setRowCount(0);
        List<Events> eventList;

        try ( Connection conn = DbUtil.getConnection();  PreparedStatement ps = conn.prepareStatement(IQueryMapper.SELECT_PERSONAL_EVENTS)) {

            ps.setString(1, this.fName);

            ResultSet rs = ps.executeQuery();
            if (rs == null) {
                JOptionPane.showMessageDialog(this, "Currently No Records to Display");
            }
            eventList = new ArrayList<>();
            
            while (rs.next()) {
                Events e = new Events();
                e.setEventId(rs.getString(1));
                e.setEventName(rs.getString(4));
                e.setFromDate(rs.getString(6));
                
                String location = rs.getString(3);
                if (location != null && location.contains(",")) {
                    e.setCity(location.substring(0, location.indexOf(',')));
                    e.setState(location.substring(location.indexOf(',') + 1));
                } else {
                    e.setCity("N/A");
                    e.setState("N/A");
                }
                
//                e.setCity(rs.getString(3).substring(0, rs.getString(3).indexOf(',')));
//                e.setState(rs.getString(3).substring(rs.getString(3).indexOf(',')+1, rs.getString(3).length()));
                e.setStatus(rs.getString(9));
                
                System.out.println(e.toString());
                eventList.add(e);
            }

            System.out.println(eventList);

            for (Events prop : eventList) {
                Object[] row = new Object[6];

                row[0] = prop;
                row[1] = prop.getFromDate();
                row[2] = prop.getCity();
                row[3] = prop.getState();
                
                populateReviewTable.addRow(row);
            }

        } catch (Exception ex) {
            Logger.getLogger(RemovePersonalEvent.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
